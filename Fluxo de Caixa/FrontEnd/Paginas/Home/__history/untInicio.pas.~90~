unit untInicio;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, UFrameFluxo, UFrameInicio,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.WinXCtrls,
  System.ImageList, Vcl.ImgList, Vcl.StdCtrls, Vcl.Imaging.pngimage,
  Vcl.ComCtrls, Vcl.Grids, UFluxoDeCaixa, UFluxoDeCaixaController, Utils,
  Generics.Collections;

type
  TfrmInicio = class(TForm)
    heaLateral: TSplitView;
    imgLogo: TImage;
    pnlFluxo: TPanel;
    imgFluxo: TImage;
    lblFluxo: TLabel;
    pnlInicio: TPanel;
    imgInicio: TImage;
    lblInicio: TLabel;
    pnlContainer: TPanel;
    pnlBody: TPanel;
    pnlDadosAdicionais: TPanel;
    pnlInformacoesDoGrafico: TPanel;
    pnlInformacoesDoFluxo: TPanel;
    pnlInformacaoReceita: TPanel;
    pnlInformacaoResultado: TPanel;
    pnlInfomacaoDespesa: TPanel;
    lblResultado: TLabel;
    lblValorResultado: TLabel;
    lblReceita: TLabel;
    lblValorReceita: TLabel;
    lblDespesas: TLabel;
    lblValorDespesa: TLabel;

    procedure pnlFluxoClick(Sender: TObject);
    procedure pnlInicioClick(Sender: TObject);
    procedure MostrarValorTotal();
    procedure FormCreate(Sender: TObject);
  private
    FAtivoFrame: TFrame;
    { Private declarations }
  public

    procedure MudarTela(AFrame: TFrame);
    { Public declarations }
  end;

var
  frmInicio: TfrmInicio;

implementation

{$R *.dfm}

procedure TfrmInicio.FormCreate(Sender: TObject);
begin
  MostrarValorTotal();
end;

procedure TfrmInicio.MostrarValorTotal;
var
  FluxoDeCaixa: TFluxoDeCaixa;
  Fluxos: TList<TFluxoDeCaixa>;
  FluxoController: TFluxoDeCaixaController;
  Receita, Despesa, ValorTotal: double;
begin
  ValorTotal := 0;
  Receita := 0;
  Despesa := 0;
  FluxoController := TFluxoDeCaixaController.Create;
  Receita := FluxoController.MostrarReceitas();
  Despesa := FluxoController.MostrarDespesas();
  ValorTotal := FluxoController.MostrarValorTotal();
  lblValorReceita.Caption := ConverterValorParaTexto(Receita);
  lblValorDespesa.Caption := ConverterValorParaTexto(Despesa);
  lblValorResultado.Caption := ConverterValorParaTexto(ValorTotal);
end;

procedure TfrmInicio.MudarTela(AFrame: TFrame);
begin
  if Assigned(FAtivoFrame) then
  begin
    FAtivoFrame.Free;
    FAtivoFrame := nil;
  end;
  FAtivoFrame := AFrame;
  FAtivoFrame.Parent := pnlContainer;
  FAtivoFrame.Align := alClient;
end;

procedure TfrmInicio.pnlFluxoClick(Sender: TObject);
var
  frameFluxo: TFrameFluxo;
begin
  if Assigned(FAtivoFrame) and (FAtivoFrame is TFrameFluxo) then
    Exit;
  try
    frameFluxo := TFrameFluxo.Create(Self);
    frameFluxo.Name := '';
    frameFluxo.Parent := pnlContainer;
    frameFluxo.Align := alClient;
    frameFluxo.Inicializar;
    // TIVE QUE CRIAR POIS ESTAVA COM PROBLEMAS NO SCROL RECEBENDO OUTRO FRAME

    MudarTela(frameFluxo);

  except
    on E: Exception do
      ShowMessage('Erro ao criar frame:  ' + E.Message);
  end;
end;

procedure TfrmInicio.pnlInicioClick(Sender: TObject);
var
  frameInicio: TFrameInicio;
begin
  if Assigned(FAtivoFrame) and (FAtivoFrame is TFrameInicio) then
    Exit;
  try
    frameInicio := TFrameInicio.Create(Self);
    frameInicio.Name := '';
    frameInicio.Parent := pnlContainer;
    frameInicio.Align := alClient;
    MostrarValorTotal;
    MudarTela(frameInicio);

  except
    on E: Exception do
      ShowMessage('Erro ao criar frame:  ' + E.Message);
  end;
end;

end.
