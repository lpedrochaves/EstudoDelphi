unit untInicio;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, UFrameFluxo,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.WinXCtrls,
  System.ImageList, Vcl.ImgList, Vcl.StdCtrls, Vcl.Imaging.pngimage,
  Vcl.ComCtrls, Vcl.Grids, UFluxoDeCaixa, UFluxoDeCaixaController, Utils,
  Generics.Collections, VclTee.TeeGDIPlus, VclTee.TeEngine, VclTee.Series,
  VclTee.TeeProcs, VclTee.Chart, UGraficoPizzaPercentualCategoriasController,
  UGraficoPizzaPercentualCategorias;

type
  TfrmInicio = class(TForm)
    heaLateral: TSplitView;
    imgLogo: TImage;
    pnlFluxo: TPanel;
    imgFluxo: TImage;
    lblFluxo: TLabel;
    pnlInicio: TPanel;
    imgInicio: TImage;
    lblInicio: TLabel;
    pnlContainer: TPanel;
    pnlBody: TPanel;
    pnlDadosAdicionais: TPanel;
    pnlInformacoesDoGrafico: TPanel;
    pnlInformacoesDoFluxo: TPanel;
    pnlInformacaoReceita: TPanel;
    pnlInformacaoResultado: TPanel;
    pnlInfomacaoDespesa: TPanel;
    lblResultado: TLabel;
    lblValorResultado: TLabel;
    lblReceita: TLabel;
    lblValorReceita: TLabel;
    lblDespesas: TLabel;
    lblValorDespesa: TLabel;
    chrGraficoCategoria: TChart;
    Series1: TPieSeries;
    Button1: TButton;

    procedure pnlFluxoClick(Sender: TObject);
    procedure pnlInicioClick(Sender: TObject);
    procedure MostrarValorTotal();
    procedure FormCreate(Sender: TObject);
    procedure MontarGrafico();
    procedure Button1Click(Sender: TObject);
  private
    FAtivoFrame: TFrame;
    { Private declarations }
  public

    procedure MudarTela(AFrame: TFrame);
    { Public declarations }
  end;

var
  frmInicio: TfrmInicio;

implementation

{$R *.dfm}

procedure TfrmInicio.MontarGrafico;
var
  GraficoController: TGraficoPizzaPercentualCategoriasController;
  ListaGraficos: TList<TGraficoPizzaPercentualCategorias>;
  i: integer;
  Serie: TPieSeries;
  Grafico: TGraficoPizzaPercentualCategorias;
begin
  GraficoController := TGraficoPizzaPercentualCategoriasController.Create;
  ListaGraficos := TList<TGraficoPizzaPercentualCategorias>.Create;
  ListaGraficos := GraficoController.FindAll();
  Grafico := TGraficoPizzaPercentualCategorias.Create;

  Serie := TPieSeries.Create(chrGraficoCategoria);

  for Grafico in ListaGraficos do
  begin
    Grafico.Create(Grafico.Categoria, Grafico.Tipo, Grafico.Pagamento,
      Grafico.TotalValorCategoria);
  end;


  // for i := 0 to ListaGraficos.Count - 1 do
  // begin
  // ShowMessage(ListaGraficos[i].Pagamento + ' - ' + ListaGraficos[i].Categoria
  // + ' - ' + ListaGraficos[i].Tipo + ' - ' +
  // FloatToStr(ListaGraficos[i].TotalValorCategoria));
  // end;

end;

procedure TfrmInicio.Button1Click(Sender: TObject);
begin
  ShowMessage('clicou');
  MontarGrafico;
end;

procedure TfrmInicio.FormCreate(Sender: TObject);
begin
  MostrarValorTotal();
end;

procedure TfrmInicio.MostrarValorTotal;
var
  FluxoDeCaixa: TFluxoDeCaixa;
  Fluxos: TList<TFluxoDeCaixa>;
  FluxoController: TFluxoDeCaixaController;
  Receita, Despesa, ValorTotal: double;
begin
  ValorTotal := 0;
  Receita := 0;
  Despesa := 0;
  FluxoController := TFluxoDeCaixaController.Create;
  Receita := FluxoController.MostrarReceitas();
  Despesa := FluxoController.MostrarDespesas();
  ValorTotal := FluxoController.MostrarValorTotal();
  lblValorReceita.Caption := ConverterValorParaTexto(Receita);
  lblValorDespesa.Caption := ConverterValorParaTexto(Despesa);
  lblValorResultado.Caption := ConverterValorParaTexto(ValorTotal);
end;

procedure TfrmInicio.MudarTela(AFrame: TFrame);
begin
  if Assigned(FAtivoFrame) then
  begin
    FAtivoFrame.Free;
    FAtivoFrame := nil;
  end;
  FAtivoFrame := AFrame;
  FAtivoFrame.Parent := pnlContainer;
  FAtivoFrame.Align := alClient;
end;

procedure TfrmInicio.pnlFluxoClick(Sender: TObject);
var
  frameFluxo: TFrameFluxo;
begin
  if Assigned(FAtivoFrame) and (FAtivoFrame is TFrameFluxo) then
    Exit;
  try
    frameFluxo := TFrameFluxo.Create(Self);
    frameFluxo.Name := '';
    frameFluxo.Parent := pnlContainer;
    frameFluxo.Align := alClient;
    frameFluxo.Inicializar;
    // TIVE QUE CRIAR POIS ESTAVA COM PROBLEMAS NO SCROL RECEBENDO OUTRO FRAME

    MudarTela(frameFluxo);

  except
    on E: Exception do
      ShowMessage('Erro ao criar frame:  ' + E.Message);
  end;
end;

procedure TfrmInicio.pnlInicioClick(Sender: TObject);

begin
  if Assigned(FAtivoFrame) and (FAtivoFrame is TFrameFluxo) then
  begin
    MostrarValorTotal;
    FAtivoFrame.Free;
    FAtivoFrame := nil;
  end;
end;

end.
