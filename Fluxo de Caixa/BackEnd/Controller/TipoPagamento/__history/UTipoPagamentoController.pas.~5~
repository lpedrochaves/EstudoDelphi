unit UTipoPagamentoController;

interface

uses
  UBaseRepository, UTipoPagamentoRepository, UTipoPagamentoService,
  Generics.Collections, System.SysUtils, UTipoPagamentoModel;

type
  TTipoPagamentoController = class
  private
    FTipoPagamentoService: TTipoPagamentoService;
  public
    constructor Create();
    function FindAll(): TList<TTipoPagamentoModel>;
  end;

implementation

{ TTipoPagamentoController }

constructor TTipoPagamentoController.Create;
begin

end;

function TTipoPagamentoController.FindAll: TList<TTipoPagamentoModel>;
var
  TipoPagamentos: TList<TTipoPagamentoModel>;
  BaseRepository: TBaseRepository;
  TipoPagamentosRepository: TTipoPagamentoRepository;
  TipoPagamentosService: TTipoPagamentoService;
begin

  Result := nil;
  BaseRepository := TBaseRepository.Create();

  try
    TipoPagamentosRepository := TTipoPagamentoRepository.Create(BaseRepository);
    try
      TipoPagamentosService := TTipoPagamentoService.Create
        (TipoPagamentosRepository);
      try
        Result := TipoPagamentosService.ListarTodas();
      finally
        TipoPagamentosService.Free;
      end;
    finally
      TipoPagamentosRepository.Free;
    end;
  finally
    BaseRepository.Free;
  end;

end;

end.
