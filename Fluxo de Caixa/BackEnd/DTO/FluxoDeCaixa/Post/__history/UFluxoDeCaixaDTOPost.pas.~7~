unit UFluxoDeCaixaDTOPost;

interface

type
  TFluxoDeCaixaDTOPost = class
  private
    FId: Integer;
    FCategoriaId: Integer;
    FTipoPagamentoId: Integer;
    FTipo: String;
    FData: TDate;
    FValor: Double;
    FDescricao: String;

    function GetId: Integer;
    procedure SetId(const Value: Integer);
    function GetCategoriaId: Integer;
    procedure SetCategoriaId(const Value: Integer);
    function GetTipoPagamentoId: Integer;
    procedure SetTipoPagamentoId(const Value: Integer);
    function GetTipo: String;
    procedure SetTipo(const Value: String);

  public
    property Id: Integer read GetId write SetId;
    property CategoriaId: Integer read GetCategoriaId write SetCategoriaId;
    property TipoPagamentoId: Integer read GetTipoPagamentoId
      write SetTipoPagamentoId;
    property Tipo: String read GetTipo write SetTipo;
  end;

implementation

{ TFluxoDeCaixaDTOPost }

function TFluxoDeCaixaDTOPost.GetCategoriaId: Integer;
begin
  Result := FCategoriaId;
end;

function TFluxoDeCaixaDTOPost.GetId: Integer;
begin
  Result := FId;
end;

function TFluxoDeCaixaDTOPost.GetTipo: String;
begin
  Result := FTipo;
end;

function TFluxoDeCaixaDTOPost.GetTipoPagamentoId: Integer;
begin
  Result := FTipoPagamentoId;
end;

procedure TFluxoDeCaixaDTOPost.SetCategoriaId(const Value: Integer);
begin
  FCategoriaId := Value;
end;

procedure TFluxoDeCaixaDTOPost.SetId(const Value: Integer);
begin
  FId := Value;
end;

procedure TFluxoDeCaixaDTOPost.SetTipo(const Value: String);
begin
  FTipo := Value;
end;

procedure TFluxoDeCaixaDTOPost.SetTipoPagamentoId(const Value: Integer);
begin
  FTipoPagamentoId := Value;
end;

end.
